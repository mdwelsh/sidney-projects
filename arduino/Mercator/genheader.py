#!/usr/bin/env python

import argparse
import sys
from PIL import Image

OUTPUT_WIDTH = 36
OUTPUT_HEIGHT = 36


def process_image(infile, width, height, outfile=None):
    img = Image.open(infile)
    img = img.convert('RGB')
    img = img.resize((width, height))

    if outfile:
        img.save(outfile)
        print(f"Saved scaled image to {outfile}")
        return

    pixels = list(img.getdata())

    print(f"// Generated by genheader.py --width {width} --height {height} {infile}")
    print(f"#define IMAGE_COLUMNS {width}")
    print(f"#define IMAGE_ROWS {height}")
    print(f"const static uint8_t IMAGE[] = {{")
    for pixel in pixels:
        r, g, b = pixel
        print(f"{b:#04x}, {g:#04x}, {r:#04x},")
    print("};")


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("--width", type=int, default=36)
    parser.add_argument("--height", type=int, default=36)
    parser.add_argument("--outfile", type=str, default=None)
    parser.add_argument('infile')
    args = parser.parse_args()

    process_image(args.infile, args.width, args.height, args.outfile)


if __name__ == "__main__":
    main()
